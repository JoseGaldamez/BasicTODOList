{"version":3,"sources":["components/08-useReducer/itemTodo.js","components/08-useReducer/TodoList.js","hooks/useForm.js","components/08-useReducer/TodoForm.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["ItemTodo","item","index","handleDelete","handleToggle","className","done","onClick","id","desc","TodoList","todos","handleDetele","map","todo","i","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","TodoForm","handleAddTodo","description","onSubmit","e","preventDefault","trim","length","Date","getTime","type","placeholder","onChange","autoComplete","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","newTodo","ReactDOM","render","document","getElementById"],"mappings":"gLAceA,EAZE,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAE1C,OACI,qBAAIC,UAAU,kBAAd,UACI,oBAAGA,UAAYJ,EAAKK,KAAO,WAAa,GAAKC,QAAS,kBAAMH,EAAcH,EAAKO,KAA/E,cAAwFN,EAAQ,EAAhG,KAAqGD,EAAKQ,KAA1G,OACA,wBAAQF,QAAS,kBAAMJ,EAAaF,EAAKO,KAAMH,UAAU,yBAAzD,sBAFiCJ,EAAKO,KCkBnCE,EAnBE,SAAC,GAA8C,IAAD,IAA5CC,aAA4C,MAApC,GAAoC,EAAhCC,EAAgC,EAAhCA,aAAcR,EAAkB,EAAlBA,aAEzC,OACI,oBAAIC,UAAU,aAAd,SAEQM,EAAME,KAAK,SAACC,EAAMC,GAAP,OACP,cAAC,EAAD,CAEQd,KAAMa,EACNZ,MAAOa,EACPZ,aAAcS,EACdR,aAAgBA,GAJXU,EAAKN,U,cCWvBQ,EApBC,WAAwB,IAAvBC,EAAsB,uDAAP,GAE5B,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAUH,IAGRK,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAACN,EAAQG,EAAmBD,ICuCxBK,EArDE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEf,EAAkDX,EAAQ,CACtDY,YAAa,KADjB,mBAAQA,EAAR,KAAQA,YAAcN,EAAtB,KAAyCD,EAAzC,KAwBA,OACI,qCACI,+CACY,uBACA,uBAAMQ,SAxBL,SAACC,GAClBA,EAAEC,iBAGiC,IAA9BH,EAAYI,OAAOC,SAEpBN,EAAc,CACVnB,IAAI,IAAI0B,MAAOC,UACf1B,KAAMmB,EACNtB,MAAM,IAGVe,MAYY,UACI,uBACIhB,UAAU,eACV+B,KAAK,OACLC,YAAY,gBACZb,KAAK,cACLC,MAAOG,EACPU,SAAUhB,EACViB,aAAa,QAEjB,wBACIlC,UAAU,yCADd,4B,eC3CfmC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAE/C,OAAQA,EAAON,MACX,IAAK,MACD,MAAM,GAAN,mBAAWK,GAAX,CAAkBC,EAAOC,UAE7B,IAAK,SACD,OAAOF,EAAMG,QAAQ,SAAA9B,GAAI,OAAIA,EAAKN,KAAOkC,EAAOC,WAEpD,IAAK,SAIL,IAAK,aACD,OAAOF,EAAM5B,KAAI,SAAAC,GACb,OAAIA,EAAKN,KAAOkC,EAAOC,QACZ,2BACA7B,GADP,IAEIR,MAAOQ,EAAKR,OAGTQ,KAInB,QACI,OAAO2B,ICnBbI,EAAO,WAET,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAmEzCC,EA9DC,WAGZ,MAA4BC,qBAAWX,EAAa,GAAIK,GAAxD,mBAAQlC,EAAR,KAAeyC,EAAf,KAEAC,qBAAU,WACNL,aAAaM,QAAQ,QAASR,KAAKS,UAAU5C,MAC9C,CAACA,IA+BJ,OACI,gCACI,4CAAeA,EAAMsB,OAArB,QACA,uBACI,sBAAK5B,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CAAUsB,cAlCR,SAAC6B,GAEnBJ,EAAS,CACLhB,KAAM,MACNO,QAASa,SAgCD,sBAAKnD,UAAU,QAAf,UACI,2DACA,uBAEA,cAAC,EAAD,CACQM,MAAOA,EACPC,aA9BP,SAACJ,GAMlB4C,EALe,CACXhB,KAAM,SACNO,QAASnC,KA4BWJ,aAtBP,SAACI,GAClB4C,EAAS,CACLhB,KAAM,SACNO,QAASnC,iBChCrBiD,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.926968f3.chunk.js","sourcesContent":["import React from 'react';\n\nconst ItemTodo = ({item, index, handleDelete, handleToggle}) => {\n\n    return (\n        <li className=\"list-group-item\" key={item.id}>\n            <p className={ item.done ? \"complete\" : \"\" } onClick={() => handleToggle( item.id ) }> {index + 1}. {item.desc} </p>\n            <button onClick={() => handleDelete(item.id) } className=\"btn btn-outline-danger\">\n                Borrar\n            </button>\n        </li>\n    );\n};\n\nexport default ItemTodo;","import React from 'react';\n\nimport ItemTodo from './itemTodo';\n\nconst TodoList = ({todos = [], handleDetele, handleToggle}) => {\n\n    return (\n        <ul className=\"list-group\">\n            {\n                todos.map( (todo, i) => (\n                    <ItemTodo \n                            key={todo.id} \n                            item={todo} \n                            index={i} \n                            handleDelete={handleDetele} \n                            handleToggle = {handleToggle} />\n                ) )\n            }        \n        </ul>\n    );\n};\n\n\nexport default TodoList;","import { useState } from \"react\";\n\nconst useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n\n    return [values, handleInputChange, reset];\n\n};\n\nexport default useForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useForm from '../../hooks/useForm';\n\nconst TodoForm = ({handleAddTodo}) => {\n\n    const [{description}, handleInputChange, reset] = useForm({\n        description: ''\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        if ( description.trim().length !== 0 ) {\n            \n            handleAddTodo({\n                id: new Date().getTime(),\n                desc: description,\n                done: false\n            });\n\n            reset();\n        } else {\n            return;\n        }\n\n    }\n\n\n    return (\n        <>\n            <h3>Agregar tarea</h3>\n                        <hr />\n                        <form onSubmit={handleSubmit} > \n                            <input \n                                className=\"form-control\" \n                                type=\"text\" \n                                placeholder=\"Descripcion..\" \n                                name=\"description\" \n                                value={description}\n                                onChange={handleInputChange}\n                                autoComplete=\"off\" />\n\n                            <button \n                                className=\"btn btn-outline-success mt-1 btn-block\">\n                                    Agregar\n                                </button>\n            </form>\n        </>\n    );\n};\n\nTodoForm.propTypes = {\n    handleAddTodo: PropTypes.func.isRequired\n};\n\nexport default TodoForm;","\nexport const todoReducer = (state = [], action) => {\n\n    switch (action.type) {\n        case \"add\":\n            return [...state, action.payload];\n\n        case \"delete\":\n            return state.filter( todo => todo.id !== action.payload ) ;\n\n        case \"toggle\":\n            return state.map(todo => (todo.id === action.payload) ? {...todo, done: !todo.done} : todo );\n        \n\n        case \"toggle-old\":\n            return state.map(todo => {\n                if (todo.id === action.payload) {\n                    return {\n                        ...todo,\n                        done: !todo.done\n                    }\n                } else {\n                    return todo;\n                }\n            } );\n    \n        default:\n            return state;\n    }\n\n}","import React, { useEffect, useReducer } from 'react';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nimport './styles.css';\nimport { todoReducer } from './todoReducer';\n\n\nconst init = () => {\n\n    return JSON.parse(localStorage.getItem('todos')) || [];\n\n}\n\n\nconst TodoApp = () => {\n\n    \n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos) );\n    }, [todos]);\n\n\n    const handleAddTodo = (newTodo) => {\n        \n        dispatch({\n            type: \"add\",\n            payload: newTodo\n        });\n\n    }\n\n\n    \n\n    const handleDelete = (id) => {\n        const action = {\n            type: \"delete\",\n            payload: id\n        }\n\n        dispatch(action);\n    }\n\n    const handleToggle = (id) => {\n        dispatch({\n            type: \"toggle\",\n            payload: id\n        });\n    }\n\n    return (\n        <div>\n            <h1>Todo App ({todos.length}) </h1>\n            <hr />\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <TodoForm handleAddTodo={handleAddTodo} />\n                    </div>\n                    <div className=\"col-7\">\n                        <h3>Lista de Tareas por hacer</h3>\n                        <hr />\n\n                        <TodoList \n                                todos={todos} \n                                handleDetele = {handleDelete}\n                                handleToggle = {handleToggle} />\n\n                    </div>\n                </div>\n        </div>\n    );\n};\n\n\nexport default TodoApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './components/08-useReducer/TodoApp';\n// import CallBackHook from './components/06-memos/CallBackHook';\n//import MemoHook from './components/06-memos/MemoHook';\n//import Memorize from './components/06-memos/Memorize';\n//import LayoutEffect from './components/05-useLayoutEffect/LayoutEffect';\n//import RealExampleRef from './components/04-useRef/realExampleRef';\n//import FocusScreen from './components/04-useRef/FocusScreen';\n//import MultipleCustomHooks from './components/03-examples/MultipleCustomHooks';\n//import FormWithCustomHook from './components/02-useEffect/FormWithCustomHook';\n//import SimpleForm from './components/02-useEffect/SimpleForm';\n//import CounterWithCustomHook from './components/01-useState/CounterWithCustomHook';\n//import CounterApp from './components/01-useState/CounterApp';\n//import HookApp from './HookApp';\n//import './components/08-useReducer/intro-reducer';\n \nReactDOM.render(\n \n    <TodoApp />,\n\n  document.getElementById('root')\n);"],"sourceRoot":""}